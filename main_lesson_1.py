# Базовые операции в языке Python

# 1. Вывод информации 
# 2. Специальные символы
# 3. Математические действия с числами и строками
# 4. Математические функции 
# 5. Получение данных от пользователя


# ---- 1. Вывод информации ----

print("Hello") # Hello
print(5) # 5
print("Result: ", 7, 15, ".") # Result:  7 15 .

# Вывод информации через указанный разделитель - свойство separate
print("Result: ", 7, 15, ".", sep='|') # Result: |7|15|.
print("Result: ", 7, 15, ".", sep='') # Result: 715.

# Перевод на новую строку. Каждый print как бы автомаически добавляет end="\n", прописывать не нужно
# Но если написать end="", то каждый последующий print будет выводиться на той же строке, что и предыдущий
print("Result: ", 7, 15, ". ", sep='', end='') 
print("Second line") # Result: 715. Second line

print("Result: ", 7, 15, ". ", sep='', end='!') 
print("Second line") # Result: 715. !Second line

# Перевод на новую строку можно добавить к любому символу,например end='!\n'
print("Result: ", 7, 15, ". ", sep='', end='!\n') 
print("Second line") 
# Result: 715. !
# Second line




# ---- 2. Специальные символы ----

'''
 \n - перенос на следующую строку (в любом месте), например, print("Second l\ni\nn\ne") 
 \' (\") - позволяет добавить внутрь строки одинарную (двойную) кавычку 
 \t - добавляет табуляцию (4 отступа)


 r - позволяет избежать ошибки типа 	
path = "C:\python\name.txt"
print(path)
преобразует в 
C:\python
ame.txt - воспримет \n как перенос на следующую строку, чтобы этого избежать, пишем:
path = r"C:\python\name.txt"

 f - позволяет встравивать в строку значения других переменных
userName = "Tom"
userAge = 37
user = f"name: {userName}  age: {userAge}"
print(user)   # name: Tom  age: 37
В данном случае на место {userName} будет вставляться значение переменной userName. Аналогично на вместо {userAge} будет вставляться значение переменной userAge
'''




# ---- 3. Математические действия с числами и строками ----

print(2 + 5) # сложение, выведет: 7
print(2 - 5) # вычитание, выведет: -3
print(2 * 5) # умножение, выведет: 10
print("Результат:", 2 * 5) # умножение, выведет: Результат: 10
print(5 / 3) # деление, выведет: 1.6666666666666667
print(5 // 3) # выводит целое число при делении, выведет: 1 (все числа после запятой обрезаются, не математическое округление, а округление к меньшему числу, в отличии от математической функции round(5 / 3) - выведет 2)
print(2 % 5) # получение остатка при делении, выведет: 2
print(2 ** 5) # возведение в степень (операция с большим приоритетом, чем + - * / ), выведет: 32 (2 в 5-й степени)

word = 'Hi'
print('Result:', word * 4) # Result: HiHiHiHi


'''
+= - Присвоение результата сложения
-= - Присвоение результата вычитания
*= - Присвоение результата умножения
/= - Присвоение результата от деления
//= - Присвоение результата целочисленного деления
**= - Присвоение степени числа
%= - Присвоение остатка от деления

number = 10
number += 5
print(number)  # 15
 
number -= 3
print(number)  # 12
 
number *= 4
print(number)  # 48
'''




# ---- 4. Математические функции ----

# min() - встроенная математич. функция, которая выведет наименьшее значение
print('Результат:', min(5, 6, 3, -6, 0)) # Результат: -6

# max() - встроенная математич. функция, которая выведет максимальное значение
print('Результат:', max(5, 6, 3, -6, 0)) # Результат: 6

# abs() - встроенная математич. функция, которая выведет число по модулю
print('Результат:', abs(-6)) # Результат: 6

# pow() - встроенная математич. функция, которая возводит число в степень (по принципу **)
print('Результат:', pow(5, 3)) # Результат: 125 - 5 в 3-й степени

# round() - встроенная математич. функция, которая возводит число в степень (по принципу **)
print('Результат:', round(5 / 3)) # Результат: 2 (математическое округление числа 1.6666666666666667)




# ---- 5. Получение данных от пользователя ----
'''
input() - встроенная функция, получает от пользователя значения. Программа завешится только после того, как пользователь введет информацию + Enter
input("Сколько Вам лет?") - функция input может принимать параметр, в данном случае пользователю выводится строка "Сколько Вам лет?"
'''
input("Введите свой возраст: ")