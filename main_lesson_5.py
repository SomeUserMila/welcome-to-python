# Списки (list). Функции и их методы


# 1. Cписок данных. Создание списка
# 2. Работа с элементами списка
# 3. Функции списка
# 4. Вывод списка через цикл
# 5. Наполнение списка пользователем



# ---- 1. Cписок данных. Создание списка ----
# ---- 2. Работа с элементами списка ----
nums = [1, 3, -6, True, 'hello', [5, -5]] # создание списка
nums[0] = 50 # замена элемента списка
print(nums) # [50, 3, -6, True, 'hello', [5, -5]] - вывести весь список
print(nums[0]) # 50 - вывести первый элемент списка (по индексу)
print(nums[-1]) # [5, -5] - вывести последний элемент списка (по обратному индексу)
print(nums[-1][1]) # -5 - вывести элемент из вложенного списка




# ---- 3. Функции списка ----

# -- добавление елементов списка --

numbers = [5, 2, 7]
numbers.append(100) # метод append() добавляет елемент в конец списка
print(numbers) # [5, 2, 7, 100]

numbers.insert(1, True) # метод insert() добавляет елемент на определенное место (по индексу) и имеет 2 параметра: индекс, куда помещаем элемент и значение помещаемого элемента. При этом элемент, который изначально был на этом месте и последующие сдвигаются вправо
print(numbers) # [5, True, 2, 7, 100]

numbers.extend([5, 6, 8]) # метод extend добавляет сразу несколько элементов в конец списка. Параметр данного метода - список из элементов, которые нужно добавить в уже существующий список
print(numbers) # [5, True, 2, 7, 100, 5, 6, 8]

b = [False, -12, 0, 1] # создаем переменную-список
numbers.extend(b) # добавляем содержимое переменной в существующий список
print(numbers) # [5, True, 2, 7, 100, 5, 6, 8, False, -12, 0, 1]


# -- сортировка элементов списка --

numbers.sort() # метод сортировки списка (по возрастанию)
print(numbers) # [-12, False, 0, True, 1, 2, 5, 5, 6, 7, 8, 100] при этом False=0, True=1

numbers = [5, True, 2, 7, 100, 5, 6, 8, False, -12, 0, 1]
numbers.reverse() # метод при котором элементы списка отображаются в обратном порядке
print(numbers) # [1, 0, -12, False, 8, 6, 5, 100, 7, 2, True, 5]


# -- удаление элементов списка --

numbers.pop() # метод при котором удаляется последний элемент списка
print(numbers) # [1, 0, -12, False, 8, 6, 5, 100, 7, 2, True]

numbers.pop(0) # метод при котором удаляется элемент списка по его индексу
numbers.pop(-2) # можно передать отрицательный индекс - удаление по нумерации с конца списка
print(numbers) # [0, -12, False, 8, 6, 5, 100, 7, True] - удален первый элемент и предпоследний

numbers.remove(100) # метод remove() - удаляется элемент из списка по его определенному значению
print(numbers) # [0, -12, False, 8, 6, 5, 7, True]

numbers.clear() # метод clear() полностью очищает весь список
print(numbers) # []


# -- методы подсчета элементов списка --

numbers = [0, 1, True, 5, 5, False, 100, 0]
print(numbers.count(False)) # 3 - метод count() - сколько список содержит элементов с указанным значением (количество совпадений) (False = 0)
print(numbers.count(5)) # 2

print(len(numbers)) # 8 - метод len() - подсчет длины списка (кол-во элементов)




# ---- 4. Вывод списка через цикл ----

nums = [5, 2, 7, '50', False]
for el in nums:
    el *= 2
    print(el, end=' ') # 10 4 14 5050 0
# print('\n')




# ---- 5. Наполнение списка пользователем ----
# Задание: создать список длинной, которую укажет пользователь и содержимое списка также получим от пользователя
n = int(input('Enter lenght: ')) # запрашиваем какая длинна списка
user_list = [] # создаем пустой список
i = 0 # переменная количества итераций
while i < n:
    string = 'Enter element #' + str(i + 1) + ': ' # переменная с текстовым сообщением для пользователя
    user_list.append(input(string)) # добавляем в конец списка каждый елемент, который вводит пользователь
    i += 1 
    print(user_list)
print(user_list)